---
- name: Ensure HAProxy is installed (Debian).
  apt: name=haproxy state=installed
  when: ansible_os_family == 'Debian'

- name: Ensure HAProxy is enabled (so init script will start it on Debian).
  lineinfile:
    dest: /etc/default/haproxy
    regexp: "^ENABLED.+$"
    line: "ENABLED=1"
    state: present
  when: ansible_os_family == 'Debian'

- name: Ensure HAProxy is installed (RedHat).
  yum: name=haproxy state=installed
  when: ansible_os_family == 'RedHat'

- name: Check SELinux State
  shell: sestatus | grep "SELinux status" | awk '{print $3; }'
  register: sestatus
  ignore_errors: True
  when: ansible_os_family == 'RedHat'

- name: Ensure ibsemanage-python is installed (RedHat).
  yum: name=libsemanage-python state=latest
  when: ansible_os_family == 'RedHat'

- name: Set value for SELinux switching
  set_fact:
    enable_all_ports: "{% if haproxy_config is defined %}{{ haproxy_config.enable_all_ports | default(haproxy_selinux_enable_all_ports) }}{% else %}{{ haproxy_selinux_enable_all_ports }}{% endif %}"

- name: Enable all ports in SELinux for HAProxy
  seboolean: name=haproxy_connect_any state=yes persistent=yes
  when: sestatus.stdout == "enabled" and enable_all_ports == True and ansible_os_family == 'RedHat'

- name: Get HAProxy version.
  command: haproxy -v
  register: haproxy_version_result
  changed_when: false
  always_run: yes

- name: Set HAProxy version.
  set_fact:
    haproxy_version: "{{ '1.5' if '1.5.' in haproxy_version_result.stdout else '1.4' }}"

- name: Copy HAProxy configuration in place.
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    mode: 0644
  notify: restart haproxy

- name: Ensure HAProxy is started and enabled on boot.
  service: name=haproxy state=started enabled=yes
